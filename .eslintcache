[{"/home/dscription/Code/sophia-refactor/sophia-react/src/index.js":"1","/home/dscription/Code/sophia-refactor/sophia-react/src/components/SignupForm/SignupForm.jsx":"2","/home/dscription/Code/sophia-refactor/sophia-react/src/services/userService.js":"3","/home/dscription/Code/sophia-refactor/sophia-react/src/pages/App/App.jsx":"4","/home/dscription/Code/sophia-refactor/sophia-react/src/services/tokenService.js":"5","/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Login/Login.jsx":"6","/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Home/Home.jsx":"7","/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Onboarding/Onboarding.jsx":"8","/home/dscription/Code/sophia-refactor/sophia-react/src/components/NavBar/NavBar.jsx":"9","/home/dscription/Code/sophia-refactor/sophia-react/src/reportWebVitals.js":"10","/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Users/Users.jsx":"11","/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Signup/Signup.jsx":"12","/home/dscription/Code/sophia-refactor/sophia-react/src/services/topicService.js":"13","/home/dscription/Code/sophia-refactor/sophia-react/src/services/authService.js":"14","/home/dscription/Code/sophia-refactor/sophia-react/src/components/TopicCard/TopicCard.jsx":"15","/home/dscription/Code/sophia-refactor/sophia-react/src/components/ContentCard/ContentCard.jsx":"16","/home/dscription/Code/sophia-refactor/sophia-react/src/services/contentService.js":"17","/home/dscription/Code/sophia-refactor/sophia-react/src/pages/ExpandedContent/ExpandedContent.jsx":"18"},{"size":943,"mtime":1606419838111,"results":"19","hashOfConfig":"20"},{"size":2312,"mtime":1606419580841,"results":"21","hashOfConfig":"20"},{"size":285,"mtime":1606419504181,"results":"22","hashOfConfig":"20"},{"size":2098,"mtime":1606675121880,"results":"23","hashOfConfig":"20"},{"size":726,"mtime":1606419504141,"results":"24","hashOfConfig":"20"},{"size":1639,"mtime":1606419615691,"results":"25","hashOfConfig":"20"},{"size":990,"mtime":1606593658490,"results":"26","hashOfConfig":"20"},{"size":2309,"mtime":1606500330543,"results":"27","hashOfConfig":"20"},{"size":931,"mtime":1606419580801,"results":"28","hashOfConfig":"20"},{"size":362,"mtime":1606418778541,"results":"29","hashOfConfig":"20"},{"size":490,"mtime":1606419615781,"results":"30","hashOfConfig":"20"},{"size":465,"mtime":1606419615741,"results":"31","hashOfConfig":"20"},{"size":998,"mtime":1606592695130,"results":"32","hashOfConfig":"20"},{"size":1118,"mtime":1606419504091,"results":"33","hashOfConfig":"20"},{"size":2580,"mtime":1606675553970,"results":"34","hashOfConfig":"20"},{"size":550,"mtime":1606674423060,"results":"35","hashOfConfig":"20"},{"size":1031,"mtime":1606592739520,"results":"36","hashOfConfig":"20"},{"size":1584,"mtime":1606682219610,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1iidmhc",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/dscription/Code/sophia-refactor/sophia-react/src/index.js",[],["82","83"],"/home/dscription/Code/sophia-refactor/sophia-react/src/components/SignupForm/SignupForm.jsx",[],"/home/dscription/Code/sophia-refactor/sophia-react/src/services/userService.js",[],["84","85"],"/home/dscription/Code/sophia-refactor/sophia-react/src/pages/App/App.jsx",["86"],"/home/dscription/Code/sophia-refactor/sophia-react/src/services/tokenService.js",["87"],"function setToken(token) {\n  localStorage.setItem(\"token\", token);\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  getUserFromToken,\n  removeToken,\n};",["88","89"],"/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Login/Login.jsx",[],"/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Home/Home.jsx",[],"/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Onboarding/Onboarding.jsx",["90"],"import React, { Component } from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Form from 'react-bootstrap/Form';\nimport styled from 'styled-components';\nimport * as topicAPI from '../../services/topicService';\n\nconst Card = styled.div`\n  text-align: center;\n  margin: 0px auto;\n  border: solid 2px black;\n`;\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 10px auto;\n`;\n\nclass Onboarding extends Component {\n  state = {\n    value: '',\n    topics: [],\n  };\n\n  handleSubmit = async () => {\n    console.log('done', this.state.topics);\n    // TODO: Make call to backend, send topics, and create new Topics from array of topics.\n    const newTopics = await topicAPI.createMultiple(this.state.topics);\n    this.props.handleCompleteOnboarding()\n  };\n\n  handleAddTopic = (e) => {\n    e.preventDefault();\n    const topics = [...this.state.topics];\n    topics.push(this.state.value);\n    this.setState({ topics });\n    this.setState({ value: '' });\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n\n  render() {\n    const { topics } = this.state;\n\n    return (\n      <Container>\n        <h1>Onboarding Page!</h1>\n        <h2>Welcome! Tell us about all the things you would like to learn!</h2>\n        <Form onSubmit={this.handleAddTopic}>\n          <Form.Group controlId=\"add-topic\">\n            <InputGroup>\n              <FormControl\n                placeholder=\"add-topic\"\n                aria-label=\"add-topic\"\n                aria-describedby=\"add-topic\"\n                onChange={this.handleInputChange}\n                value={this.state.value}\n              />\n              <InputGroup.Append>\n                <Button\n                  type=\"submit\"\n                  variant=\"outline-secondary\"\n                >\n                  Add\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Form.Group>\n        </Form>\n        {/* // TODO: Render all topics in a box. */}\n        {topics.map((topic, idx) => (\n          <Card key={idx}>{topic}</Card>\n        ))}\n        <Button onClick={this.handleSubmit}>Done For Now</Button>\n      </Container>\n    );\n  }\n}\n\nexport default Onboarding;\n","/home/dscription/Code/sophia-refactor/sophia-react/src/components/NavBar/NavBar.jsx",[],["91","92"],"/home/dscription/Code/sophia-refactor/sophia-react/src/reportWebVitals.js",[],"/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Users/Users.jsx",[],"/home/dscription/Code/sophia-refactor/sophia-react/src/pages/Signup/Signup.jsx",[],"/home/dscription/Code/sophia-refactor/sophia-react/src/services/topicService.js",[],"/home/dscription/Code/sophia-refactor/sophia-react/src/services/authService.js",["93"],"/home/dscription/Code/sophia-refactor/sophia-react/src/components/TopicCard/TopicCard.jsx",["94"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport ContentCard from '../ContentCard/ContentCard.jsx';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Form from 'react-bootstrap/Form';\nimport * as contentAPI from '../../services/contentService';\nimport * as topicAPI from '../../services/topicService';\n\nclass TopicCard extends Component {\n  state = {\n    contents: topicAPI.getTopicContents(this.props.topic._id),\n    value: '',\n  };\n\n  handleAddContent = async (e) => {\n    e.preventDefault();\n    const newContent = await contentAPI.createContent(\n      { name: this.state.value },\n      this.props.topic._id\n    );\n    this.setState({\n      contents: await topicAPI.getTopicContents(this.props.topic._id),\n    });\n    // call service function to populate all contents in the topic card\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ value: e.target.value });\n  };\n\n  async componentWillMount() {\n    this.setState({\n      contents: await topicAPI.getTopicContents(this.props.topic._id),\n    });\n  }\n\n  render() {\n    const { topic } = this.props;\n    const { contents } = this.state;\n    return (\n      <Card\n        style={{\n          width: '200px',\n          height: '450px',\n          margin: '10px auto',\n        }}\n      >\n        <Card.Header>\n          <>{topic.name}</>\n        </Card.Header>\n        <Card.Body>\n          <Form onSubmit={this.handleAddContent}>\n            <Form.Group controlId=\"add-content\">\n              <InputGroup>\n                <FormControl\n                  placeholder=\"add-content\"\n                  aria-label=\"add-content\"\n                  aria-describedby=\"add-content\"\n                  onChange={this.handleInputChange}\n                  value={this.state.value}\n                />\n                <InputGroup.Append>\n                  <Button type=\"submit\" variant=\"outline-secondary\">\n                    Add\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n          </Form>\n          {contents.length > 0 ? (\n            contents.map((content) => (\n              <Link to={{ pathname: '/expanded-content', state: content }}>\n                <ContentCard content={content} />\n              </Link>\n            ))\n          ) : (\n            <span>No Content Yet</span>\n          )}\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default TopicCard;\n","/home/dscription/Code/sophia-refactor/sophia-react/src/components/ContentCard/ContentCard.jsx",[],["95","96"],"/home/dscription/Code/sophia-refactor/sophia-react/src/services/contentService.js",[],"/home/dscription/Code/sophia-refactor/sophia-react/src/pages/ExpandedContent/ExpandedContent.jsx",["97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":9,"column":13,"nodeType":"107","messageId":"108","endLine":9,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":28,"column":1,"nodeType":"111","endLine":33,"endColumn":3},{"ruleId":"99","replacedBy":"112"},{"ruleId":"101","replacedBy":"113"},{"ruleId":"105","severity":1,"message":"114","line":29,"column":11,"nodeType":"107","messageId":"108","endLine":29,"endColumn":20},{"ruleId":"99","replacedBy":"115"},{"ruleId":"101","replacedBy":"116"},{"ruleId":"109","severity":1,"message":"110","line":47,"column":1,"nodeType":"111","endLine":52,"endColumn":3},{"ruleId":"105","severity":1,"message":"117","line":20,"column":11,"nodeType":"107","messageId":"108","endLine":20,"endColumn":21},{"ruleId":"99","replacedBy":"118"},{"ruleId":"101","replacedBy":"119"},{"ruleId":"105","severity":1,"message":"120","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":19},{"ruleId":"105","severity":1,"message":"121","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":18},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],"no-unused-vars","'topicAPI' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["122"],["123"],"'newTopics' is assigned a value but never used.",["122"],["123"],"'newContent' is assigned a value but never used.",["122"],["123"],"'FormControl' is defined but never used.","'InputGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]